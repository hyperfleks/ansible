limit_req_zone $binary_remote_addr zone={{ app_name }}:10m rate=10r/s;

server {
    listen 80;
    server_name {{ domain }};
    return 302 https://{{ domain }}$request_uri;
}

server {
    listen 443 ssl;
    server_name {{ domain }};

    access_log /var/log/nginx/{{ domain }}.access.log timed;
    error_log /var/log/nginx/{{ domain }}.error.log;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_certificate /etc/nginx/ssl/{{ domain }}.crt;
    ssl_certificate_key /etc/nginx/ssl/{{ domain }}.key;
    ssl_session_cache shared:SSL:10m;
    ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 10m;

    if ($http_host != {{ domain }}) {
        return 404;
    }

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_hide_header UserId;
    client_max_body_size 10m;

    location / {
        limit_req zone={{ app_name }} burst=50;
        proxy_pass http://127.0.0.1:{{ gunicorn_port }};
    }

    location /api {
        limit_req zone={{ app_name }} burst=50;
        proxy_pass http://127.0.0.1:{{ gunicorn_port }};
        allow 5.61.239.130;  # land1
        allow 5.61.239.131;  # land2
        allow 5.61.239.157;  # aicups
        allow 5.61.239.152;  # rdesc0
        allow 5.61.239.151;  # rmlc0
        allow 5.61.239.166;  # hlcf0
        allow 5.61.239.153;  # rcryptoc0
        allow 5.61.239.150;  # ttest0
        deny all;
    }

    location /ssadmin {
        limit_req zone={{ app_name }} burst=50;
        proxy_pass http://127.0.0.1:{{ gunicorn_port }};
        allow {{ mailru_hq_net }}; # Mail.Ru HQ
        allow {{ mailru_vpn_net }}; # Mail.Ru VPN
        deny all;
    }

    location /static {
        alias /opt/{{ app_name }}/static;
        access_log off;
    }

    location /media {
        alias /media/{{ app_name }};
        access_log off;
    }
}
